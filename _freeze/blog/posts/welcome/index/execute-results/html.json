{
  "hash": "30f44b4c41c4e27222e55a7ee675467e",
  "result": {
    "markdown": "---\ntitle: \"Why Quarto?\"\ndate: \"3/04/2023\"\ndescription: \"Why I build my website with Quarto...\"\ncategories: \"Quarto\"\nimage: \"quarto.jpeg\"\nformat: html\neditor: visual\nhighlight-style: github\n---\n\n\n## What is Quarto?\n\nSome describe it as magic, and others have not used Quarto. I was introduced to Quarto as it was added to RStudio in an update in July 2022. Once I saw Thomas Mock's talk [Quarto for the curious](https://posit.co/talks/quarto-for-rmarkdown-users/) I knew I had to explore Quarto. I would go into detail about the technical aspects of what Quarto does, but why not show what it can do? This very website is built with Quarto, and so is [Quarto's website](https://quarto.org/).\n\n### My website workflow\n\nI built this site using RStuido as the environment, but if you prefer something like \\`VS Code\\` then you can use the Quarto [extension](https://marketplace.visualstudio.com/items?itemName=quarto.quarto). My site's code lives in it's own GitHub repository which you can view by clicking the code icon on the right side of the navigation bar...or [here](https://github.com/bradfordjohnson/quarto-portfolio). I use GitHub for version control, but also host my site with GitHub Pages. I bought my domain name and it was simple to get it up and running from there.\n\nWhen I want to do some **sprucing up** to my site I create a new branch and edit the branch. Once I edit the files and code I will render my site in RStudio and then push the commits. Finally I will do a pull request and merge the branch with my main branch. GitHub Actions will then publish the site, however you do not need to do the branching. A single commit on the main branch will trigger GitHub Actions and update your site automatically. This means you can edit and publish the edits all from the **code editor**!\n\n### Back to Quarto\n\nQuarto documents `.qmd` are the files that you edit, and they have `YAML` code blocks at the top of the document that let you control different features such as: titles, what the output is, and many other controls. The output control is very special as you can render a file as `.html` output for webpages and many other formats! Do you need a slideshow? A `.pdf` report? A book?\n\nHere is what the YAML looks like for this blog post!\n\n``` yaml\n---\ntitle: \"Why Quarto?\"\ndate: \"3/03/2023\"\ndescription: \"Why I build my website with Quarto...\"\ncategories: \"Quarto\"\nformat: html\neditor: visual\nhighlight-style: github\n---\n```\n\nYou can create and run code chunks, this allows you to create reports, KPI dashboards, articles and so much more. I would describe Quarto as a way to share data analytics or knowledge in a meaningful and completely customized way. It is easily integrated into workflows, and you do not even have to know `R`. You can use Quarto with `Python`, `Julia`, `Observable` or `R`. Have a team of `R` users and `Python` users? They all can work together with Quarto, and even within the same document...\n\n#### R Code Chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaste0(R.Version()[c(\"major\",\"minor\")], collapse = \".\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"4.2.2\"\n```\n:::\n:::\n\n\n#### Python Code Chunk\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport sys\nprint(\"Python version\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPython version\n```\n:::\n\n```{.python .cell-code}\nprint (sys.version)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)]\n```\n:::\n:::\n\n\n#### How about some code that makes a basic visual?\n\n``` r\n#| warning: false\n#| message: false\n\nlibrary(tidyverse)\n\nggplot(data = iris, aes( x = Sepal.Length, y = Sepal.Width,\n                         shape = Species, color = Species)) +\n  geom_point()\n```\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nDid you notice in the code chunk the `#|`'s? This is how you tell the chunk how to behave, I stopped warnings and messages in that chunk. You can use Quarto as **Jupyter notebooks** or **R Markdown notebooks** and render those notebooks to your desired output. Another thing is that you can use a visual editor, all within your development environment, making it that much easier to make some beautiful deliverables or notes for yourself!\n\n## So why Quarto?\n\n-   **Language agnostic** for data teams\n\n-   **High quality outputs**, and **many types** of outputs\n\n-   **Flexible workflows** and ease of use\n\n-   It is fun, and works via **magic**\n\nIf you are still not convinced...\n\n> I encourage you to look into Quarto as it would take a dedicated blog to really do Quarto justice, as one post can only cover so much...\n>\n> [Here's a Quarto blog](https://quarto.org/docs/blog/) made with Quarto, by the Quarto team!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}